//1.时间过滤条件
--测试操作
connect root/root;
delete storage group root.**;
<<NULL;
create storage group root.ln;
create timeseries root.ln.wf01.wt01.temperature with datatype=FLOAT ,encoding=RLE;
create timeseries root.ln.wf01.wt01.status with datatype=BOOLEAN,encoding=RLE;
create timeseries root.ln.wf02.wt02.hardware with datatype=TEXT,encoding=PLAIN;
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-10-30T08:00:00.000+08:00,FALSE,18.32);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-10-31T08:00:00.000+08:00,TRUE,15.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T00:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T02:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T03:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T16:10:00.000+08:00,TRUE,24.13);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T16:35:00.000+08:00,FALSE,21.12);
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-01T16:30:00.000+08:00,'V001');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-01T16:35:00.000+08:00,'V002');
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-02T00:00:00.000+08:00,FALSE,26.92);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-02T02:00:00.000+08:00,FALSE,26.92);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-03T00:00:00.000+08:00,TRUE,26.0);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-04T00:00:00.000+08:00,TRUE,23.29);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-05T00:00:00.000+08:00,TRUE,24.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-06T00:00:00.000+08:00,FALSE,20.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-06T03:00:00.000+08:00,FALSE,20.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T00:00:00.000+08:00,FALSE,22.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:50:00.000+08:00,FALSE,20.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:52:00.000+08:00,FALSE,21.22);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:55:00.000+08:00,TRUE,21.22);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:59:30.000+08:00,TRUE,28.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-08T00:00:00.000+08:00,TRUE,23.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2018-11-03T00:00:00.000+08:00,FALSE,20.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2018-11-06T00:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2019-11-05T00:00:00.000+08:00,TRUE,19.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2019-11-07T00:00:00.000+08:00,TRUE,24.19);
--选择时间戳大于某个时间的数据
select temperature from root.ln.** where time > 2017-11-01T16:35:00.000+08:00;

--选择时间戳等于某个时间的数据
select temperature from root.ln.** where time = 2017-11-01T16:35:00.000+08:00;

--选择区间[,]内的数据
select temperature from root.ln.** where time >= 2017-11-01T16:35:00.000+08:00 and time < 2017-11-07T23:50:00.000+08:00;

--根据一个时间区间选择一列数据
select temperature from root.ln.wf01.wt01 where time < 2017-11-01T00:08:00.000;

--根据一个时间区间选择多列数据
select status, temperature from root.ln.wf01.wt01 where time > 2017-11-01T00:00:00.000 and time < 2017-11-01T12:12:00.000;

--按照多个时间区间选择同一设备的多列数据
select status,temperature from root.ln.wf01.wt01 where (time > 2017-11-01T00:00:00.000 and time < 2017-11-01T12:12:00.000) or (time >= 2017-11-01T16:10:00.000 and time <= 2017-11-01T16:37:00.000); 

--按照多个时间区间选择不同设备的多列数据
select wf01.wt01.status,wf02.wt02.hardware from root.ln where (time > 2017-11-01T00:05:00.000 and time < 2017-11-01T00:12:00.000) or (time >= 2017-11-01T16:30:00.000 and time <= 2017-11-01T16:37:00.000); 

--根据时间降序返回结果集：
select * from root.ln.** where time > 2017-10-30T08:00:00 order by time desc limit 5; 

--清理环境
connect root/root;
delete storage group root.**;
<<NULL;


//2.值过滤条件
--测试操作
connect root/root;
delete storage group root.**;
<<NULL;
create storage group root.ln;
create timeseries root.ln.wf01.wt01.temperature with datatype=FLOAT ,encoding=RLE;
create timeseries root.ln.wf01.wt01.status with datatype=BOOLEAN,encoding=RLE;
create timeseries root.ln.wf02.wt02.hardware with datatype=TEXT,encoding=PLAIN;
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-10-30T08:00:00.000+08:00,FALSE,18.32);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-10-31T08:00:00.000+08:00,TRUE,15.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T00:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T02:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T03:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T16:10:00.000+08:00,TRUE,24.13);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-01T16:35:00.000+08:00,FALSE,21.12);
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-01T16:30:00.000+08:00,'V001');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-02T16:35:00.000+08:00,'V002');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-03T16:30:00.000+08:00,'V003');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-04T16:35:00.000+08:00,'V003');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-04T12:30:00.000+08:00,'V001');
insert into root.ln.wf02.wt02(time,hardware) values(2017-11-05T11:35:00.000+08:00,'V002');
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-02T00:00:00.000+08:00,FALSE,26.92);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-02T02:00:00.000+08:00,FALSE,26.92);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-03T00:00:00.000+08:00,TRUE,26.0);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-04T00:00:00.000+08:00,TRUE,23.29);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-05T00:00:00.000+08:00,TRUE,24.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-06T00:00:00.000+08:00,FALSE,20.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-06T03:00:00.000+08:00,FALSE,20.19);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T00:00:00.000+08:00,FALSE,22.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:50:00.000+08:00,FALSE,20.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:52:00.000+08:00,FALSE,21.22);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:55:00.000+08:00,TRUE,21.22);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-07T23:59:30.000+08:00,TRUE,28.12);
insert into root.ln.wf01.wt01(time,status,temperature) values(2017-11-08T00:00:00.000+08:00,TRUE,23.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2018-11-03T00:00:00.000+08:00,FALSE,20.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2018-11-06T00:00:00.000+08:00,TRUE,25.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2019-11-05T00:00:00.000+08:00,TRUE,19.99);
insert into root.ln.wf01.wt01(time,status,temperature) values(2019-11-07T00:00:00.000+08:00,TRUE,24.19);
--选择值大于20.5的数据
select temperature from root.ln.** where temperature > 20.5;

--选择值等于true的数据
select status from root.ln.** where status = true;

--选择区间(21.0,30]的数据
select temperature from root.ln.** where temperature > 21.0 and temperature < 30;

--选择值在特定范围内的数据
select hardware from root.ln.** where hardware in ('V001','V002');

--选择值在特定范围外的数据
select hardware from root.ln.** where hardware not in ('V001','V002');

--清理环境
connect root/root;
delete storage group root.**;
<<NULL;

//3.模糊查询
--测试操作
connect root/root;
delete storage group root.**;
<<NULL;
create storage group root.sg;
create timeseries root.sg.d1.s1 with datatype=FLOAT,encoding=RLE;
create timeseries root.sg.d1.s2 with datatype=DOUBLE,encoding=RLE;
create timeseries root.sg.d1.s3 with datatype=INT32,encoding=RLE;
create timeseries root.sg.d1.s4 with datatype=INT64,encoding=RLE;
create timeseries root.sg.d1.s5 with datatype=BOOLEAN,encoding=RLE;
create timeseries root.sg.d1.s6 with datatype=TEXT,encoding=PLAIN;
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-01T00:00:00.000+08:00,20.33,30.16,24,65,TRUE,'aabbccdd');
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-02T00:00:00.000+08:00,25.21,36.10,55,68,FALSE,'cc');
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-03T00:00:00.000+08:00,19.33,30.16,24,65,TRUE,'abc');
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-04T00:00:00.000+08:00,26.21,36.10,55,68,FALSE,'try');
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-05T00:00:00.000+08:00,26.21,36.10,55,68,FALSE,'Box');
insert into root.sg.d1(time,s1,s2,s3,s4,s5,s6) values(2017-11-06T00:00:00.000+08:00,26.21,36.10,55,68,FALSE,'BON');
--非TEXT类型的数据进行模糊匹配校验
select * from root.sg.d1 where s5 like '%TRUE%';
<<SQLSTATE;

--使用Like进行模糊匹配
select * from root.sg.d1 where s6 like '%cc%';
select * from root.sg.d1 where s6 like '_b_';

--使用Regexp进行模糊匹配
select * from root.sg.d1 where s6 regexp '^[A-Za-z]+$';
select * from root.sg.d1 where s6 regexp '^[A-Z]+$' and time > 2017-11-01T00:00:00.000+08:00;
select * from root.sg.d1 where s6 regexp '^[a-z]+$' and time > 2017-11-03T00:00:00.000+08:00;
select * from root.sg.d1 where s6 regexp '^.{3,20}$';
select * from root.sg.d1 where s6 regexp '^[A-Za-z0-9]+$'; 
select * from root.sg.d1 where s6 regexp '^a.*';  

--清理环境
connect root/root;
delete storage group root.**;
<<NULL;
